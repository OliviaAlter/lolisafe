{"version":3,"sources":["utils.js"],"names":["lsKeys","siBytes","page","prepareShareX","const","sharexElement","document","querySelector","headers","token","albumid","album","filelength","fileLength","age","uploadAge","striptags","stripTags","origin","window","location","host","pathname","replace","originClean","sharexConfObj","Name","DestinationType","RequestMethod","RequestURL","Headers","Body","FileFormName","URL","ThumbnailURL","sharexConfStr","JSON","stringify","sharexBlob","Blob","type","setAttribute","createObjectURL","getPrettyDate","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getPrettyBytes","num","isFinite","si","localStorage","neg","scale","exponent","Math","min","floor","log","LOG10E","Number","pow","toPrecision","charAt","getPrettyUptime","seconds","days","let","hours","minutes","escape","string","str","String","match","exec","html","index","lastIndex","length","charCodeAt","substring"],"mappings":"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","file":"utils.js","sourcesContent":["/* global lsKeys, page */\r\n\r\n// keys for localStorage\r\nlsKeys.siBytes = 'siBytes'\r\n\r\npage.prepareShareX = () => {\r\n  const sharexElement = document.querySelector('#ShareX')\r\n  if (!sharexElement) return\r\n\r\n  const headers = {}\r\n\r\n  if (page.token) {\r\n    headers.token = page.token || ''\r\n    headers.albumid = page.album || ''\r\n  }\r\n\r\n  headers.filelength = page.fileLength || ''\r\n  headers.age = page.uploadAge || ''\r\n  headers.striptags = page.stripTags || ''\r\n\r\n  const origin = (window.location.host + window.location.pathname).replace(/\\/(dashboard)?$/, '')\r\n  const originClean = origin.replace(/\\//g, '_')\r\n\r\n  const sharexConfObj = {\r\n    Name: originClean,\r\n    DestinationType: 'ImageUploader, FileUploader',\r\n    RequestMethod: 'POST',\r\n    RequestURL: `${window.location.protocol}//${origin}/api/upload`,\r\n    Headers: headers,\r\n    Body: 'MultipartFromData',\r\n    FileFormName: 'files[]',\r\n    URL: '$json:files[0].url$',\r\n    ThumbnailURL: '$json:files[0].url$'\r\n  }\r\n\r\n  /*\r\n  if (page.token)\r\n    sharexConfObj.DeletionURL = '$json:files[0].deleteUrl$'\r\n  */\r\n\r\n  const sharexConfStr = JSON.stringify(sharexConfObj, null, 2)\r\n  const sharexBlob = new Blob([sharexConfStr], { type: 'application/octet-binary' })\r\n  /* eslint-disable-next-line compat/compat */\r\n  sharexElement.setAttribute('href', URL.createObjectURL(sharexBlob))\r\n  sharexElement.setAttribute('download', `${originClean}.sxcu`)\r\n}\r\n\r\npage.getPrettyDate = date => {\r\n  return date.getFullYear() + '/' +\r\n    (date.getMonth() < 9 ? '0' : '') + // month's index starts from zero\r\n    (date.getMonth() + 1) + '/' +\r\n    (date.getDate() < 10 ? '0' : '') +\r\n    date.getDate() + ' ' +\r\n    (date.getHours() < 10 ? '0' : '') +\r\n    date.getHours() + ':' +\r\n    (date.getMinutes() < 10 ? '0' : '') +\r\n    date.getMinutes() + ':' +\r\n    (date.getSeconds() < 10 ? '0' : '') +\r\n    date.getSeconds()\r\n}\r\n\r\npage.getPrettyBytes = num => {\r\n  // MIT License\r\n  // Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\r\n  if (typeof num !== 'number' && !isFinite(num)) return num\r\n\r\n  const si = localStorage[lsKeys.siBytes] !== '0'\r\n  const neg = num < 0 ? '-' : ''\r\n  const scale = si ? 1000 : 1024\r\n  if (neg) num = -num\r\n  if (num < scale) return `${neg}${num} B`\r\n\r\n  const exponent = Math.min(Math.floor((Math.log(num) * Math.LOG10E) / 3), 8) // 8 is count of KMGTPEZY\r\n  const numStr = Number((num / Math.pow(scale, exponent)).toPrecision(3))\r\n  const pre = (si ? 'kMGTPEZY' : 'KMGTPEZY').charAt(exponent - 1) + (si ? '' : 'i')\r\n  return `${neg}${numStr} ${pre}B`\r\n}\r\n\r\npage.getPrettyUptime = seconds => {\r\n  const days = Math.floor(seconds / 86400)\r\n  seconds %= 86400\r\n  let hours = Math.floor(seconds / 3600)\r\n  seconds %= 3600\r\n  let minutes = Math.floor(seconds / 60)\r\n  seconds %= 60\r\n\r\n  if (hours < 10) hours = '0' + hours\r\n  if (minutes < 10) minutes = '0' + minutes\r\n  if (seconds < 10) seconds = '0' + seconds\r\n\r\n  if (days > 0) {\r\n    return days + 'd ' + hours + ':' + minutes + ':' + seconds\r\n  } else {\r\n    return hours + ':' + minutes + ':' + seconds\r\n  }\r\n}\r\n\r\npage.escape = string => {\r\n  // MIT License\r\n  // Copyright(c) 2012-2013 TJ Holowaychuk\r\n  // Copyright(c) 2015 Andreas Lubbe\r\n  // Copyright(c) 2015 Tiancheng \"Timothy\" Gu\r\n\r\n  if (!string) return string\r\n\r\n  const str = String(string)\r\n  const match = /[\"'&<>]/.exec(str)\r\n\r\n  if (!match) return str\r\n\r\n  let escape\r\n  let html = ''\r\n  let index = 0\r\n  let lastIndex = 0\r\n\r\n  for (index = match.index; index < str.length; index++) {\r\n    switch (str.charCodeAt(index)) {\r\n      case 34: // \"\r\n        escape = '&quot;'\r\n        break\r\n      case 38: // &\r\n        escape = '&amp;'\r\n        break\r\n      case 39: // '\r\n        escape = '&#39;'\r\n        break\r\n      case 60: // <\r\n        escape = '&lt;'\r\n        break\r\n      case 62: // >\r\n        escape = '&gt;'\r\n        break\r\n      default:\r\n        continue\r\n    }\r\n\r\n    if (lastIndex !== index) {\r\n      html += str.substring(lastIndex, index)\r\n    }\r\n\r\n    lastIndex = index + 1\r\n    html += escape\r\n  }\r\n\r\n  return lastIndex !== index\r\n    ? html + str.substring(lastIndex, index)\r\n    : html\r\n}\r\n"]}