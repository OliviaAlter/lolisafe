{"version":3,"sources":["home.js"],"names":["const","lsKeys","token","chunkSize","parallelUploads","uploadsHistoryOrder","previewImages","fileLength","uploadAge","stripTags","page","localStorage","apiChecked","private","enableUserAccounts","maxSize","chunkSizeConfig","temporaryUploadAges","fileIdentifierLength","stripTagsConfig","album","maxSizeBytes","urlMaxSize","urlMaxSizeBytes","tabs","activeTab","albumSelect","albumSelectOnChange","previewTemplate","dropzone","clipboardJS","lazyLoad","urlsQueue","activeUrlsQueue","imageExts","videoExts","albumTitleMaxLength","albumDescMaxLength","error","document","querySelector","classList","add","querySelectorAll","forEach","element","uploadButton","innerText","remove","addEventListener","window","location","reload","response","onAxiosError","onError","console","content","createElement","innerHTML","toString","swal","title","icon","cont","statusText","status","data","description","success","apiVersion","match","src","text","buttons","confirm","closeModal","then","axios","get","onDownloadProgress","render","done","do","newsfeed","version","checkClientVersion","parseInt","max","default","preparePage","catch","onInitError","prepareUpload","verifyToken","button","href","reloadOnError","post","removeItem","authLink","setAttribute","value","prepareShareX","fetchAlbums","prepareUploadConfig","getPrettyBytes","prepareDropzone","uploadUrls","event","addUrlsToQueue","tabsContainer","loop","i","id","dataset","tabContent","setActiveTab","push","tab","length","index","let","headers","simple","Array","isArray","albums","option","name","appendChild","previewNode","parentNode","removeChild","tabDiv","div","className","previewsContainer","Dropzone","body","url","paramName","clickable","maxFilesize","uploadMultiple","createImageThumbnails","autoProcessQueue","chunking","Boolean","parallelChunkUploads","timeout","init","this","on","file","previewElement","xhr","ontimeout","instances","getUploadingFiles","filter","instance","_handleUploadError","_uplSpeedCalc","lastSent","timestamp","Date","now","bytes","upload","chunked","setRequestHeader","chunks","progress","prettyBytesPerSec","total","Math","size","percentage","bytesSent","toFixed","upl","prefix","skipProgress","last","totalChunkCount","chunkIndex","elapsed","bytesPerSec","fullSec","splice","excessDuration","duration","files","updateTemplate","err","Error","test","updateTemplateIcon","chunksUploaded","uuid","original","type","albumid","filelength","age","striptags","urls","split","trim","firstChild","processUrlsQueue","shiftQueue","initUrlUpload","finishedUrlUpload","shift","templateElement","iconClass","iconElement","link","a","clipboard","clipboardText","parentElement","exec","extname","toLowerCase","includes","img","onerror","currentTarget","update","expirydate","expiryDate","getPrettyDate","createAlbum","cancel","download","checked","public","selected","fallback","min","config","siBytes","label","select","help","valueHandler","display","number","round","undefined","disabled","force","video","suffix","uploadFields","stored","parseFloat","String","getPrettyUploadAge","isNaN","form","preventDefault","configKeys","Object","keys","key","conf","field","parsed","find","sel","control","opts","j","opt","join","tmp","submit","checkValidity","elements","hours","minutes","days","items","clipboardData","originalEvent","item","kind","blob","getAsFile","File","addFile","cookieconsent","initialise","cookie","path","pathname","expiryDays","secure","protocol","palette","popup","background","theme","position","message","dismiss","checkIfPublic","ClipboardJS","timer","LazyLoad","elements_selector"],"mappings":"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","file":"home.js","sourcesContent":["/* global swal, axios, Dropzone, ClipboardJS, LazyLoad */\r\n\r\nconst lsKeys = {\r\n  token: 'token',\r\n  chunkSize: 'chunkSize',\r\n  parallelUploads: 'parallelUploads',\r\n  uploadsHistoryOrder: 'uploadsHistoryOrder',\r\n  previewImages: 'previewImages',\r\n  fileLength: 'fileLength',\r\n  uploadAge: 'uploadAge',\r\n  stripTags: 'stripTags'\r\n}\r\n\r\nconst page = {\r\n  // user token\r\n  token: localStorage[lsKeys.token],\r\n\r\n  // configs from api/check\r\n  apiChecked: false,\r\n  private: null,\r\n  enableUserAccounts: null,\r\n  maxSize: null,\r\n  chunkSizeConfig: null,\r\n  temporaryUploadAges: null,\r\n  fileIdentifierLength: null,\r\n  stripTagsConfig: null,\r\n\r\n  // store album id that will be used with upload requests\r\n  album: null,\r\n\r\n  parallelUploads: null,\r\n  previewImages: null,\r\n  fileLength: null,\r\n  uploadAge: null,\r\n  stripTags: null,\r\n\r\n  maxSizeBytes: null,\r\n  urlMaxSize: null,\r\n  urlMaxSizeBytes: null,\r\n  chunkSize: null,\r\n\r\n  tabs: [],\r\n  activeTab: null,\r\n  albumSelect: null,\r\n  albumSelectOnChange: null,\r\n  previewTemplate: null,\r\n\r\n  dropzone: null,\r\n  clipboardJS: null,\r\n  lazyLoad: null,\r\n\r\n  // additional vars for url uploads\r\n  urlsQueue: [],\r\n  activeUrlsQueue: 0,\r\n\r\n  // Include BMP for uploads preview only, cause the real images will be used\r\n  // Sharp isn't capable of making their thumbnails for dashboard and album public pages\r\n  imageExts: ['.gif', '.jpeg', '.jpg', '.png', '.svg', '.tif', '.tiff', '.webp', '.bmp'],\r\n  videoExts: ['.avi', '.m2ts', '.m4v', '.mkv', '.mov', '.mp4', '.webm', '.wmv'],\r\n\r\n  albumTitleMaxLength: 70,\r\n  albumDescMaxLength: 4000\r\n}\r\n\r\n// Handler for errors during initialization\r\npage.onInitError = error => {\r\n  // Hide these elements\r\n  document.querySelector('#albumDiv').classList.add('is-hidden')\r\n  document.querySelector('#tabs').classList.add('is-hidden')\r\n  document.querySelectorAll('.tab-content').forEach(element => {\r\n    return element.classList.add('is-hidden')\r\n  })\r\n\r\n  // Update upload button\r\n  const uploadButton = document.querySelector('#loginToUpload')\r\n  uploadButton.innerText = 'An error occurred. Try to reload?'\r\n  uploadButton.classList.remove('is-loading')\r\n  uploadButton.classList.remove('is-hidden')\r\n\r\n  uploadButton.addEventListener('click', () => {\r\n    window.location.reload()\r\n  })\r\n\r\n  if (error.response) page.onAxiosError(error)\r\n  else page.onError(error)\r\n}\r\n\r\n// Handler for regular JS errors\r\npage.onError = error => {\r\n  console.error(error)\r\n\r\n  const content = document.createElement('div')\r\n  content.innerHTML = `\r\n    <p><code>${error.toString()}</code></p>\r\n    <p>Please check your console for more information.</p>\r\n  `\r\n  return swal({\r\n    title: 'An error occurred!',\r\n    icon: 'error',\r\n    content\r\n  })\r\n}\r\n\r\n// Handler for Axios errors\r\npage.onAxiosError = (error, cont) => {\r\n  if (!cont) console.error(error)\r\n\r\n  // Better Cloudflare errors\r\n  const cloudflareErrors = {\r\n    520: 'Unknown Error',\r\n    521: 'Web Server Is Down',\r\n    522: 'Connection Timed Out',\r\n    523: 'Origin Is Unreachable',\r\n    524: 'A Timeout Occurred',\r\n    525: 'SSL Handshake Failed',\r\n    526: 'Invalid SSL Certificate',\r\n    527: 'Railgun Error',\r\n    530: 'Origin DNS Error'\r\n  }\r\n\r\n  const statusText = cloudflareErrors[error.response.status] || error.response.statusText\r\n\r\n  if (!cont) {\r\n    const description = error.response.data && error.response.data.description\r\n      ? error.response.data.description\r\n      : 'There was an error with the request.\\nPlease check the console for more information.'\r\n    return swal(`${error.response.status} ${statusText}`, description, 'error')\r\n  } else if (error.response.data && error.response.data.description) {\r\n    return error.response\r\n  } else {\r\n    const description = error.response\r\n      ? `${error.response.status} ${statusText}`\r\n      : error.toString()\r\n    return { data: { success: false, description } }\r\n  }\r\n}\r\n\r\npage.checkClientVersion = apiVersion => {\r\n  const self = document.querySelector('#mainScript')\r\n  const match = self.src.match(/\\?_=(\\d+)$/)\r\n  if (match && match[1] && match[1] !== apiVersion) {\r\n    return swal({\r\n      title: 'Update detected!',\r\n      text: 'Client assets have been updated. Reload to display the latest version?',\r\n      icon: 'info',\r\n      buttons: {\r\n        confirm: {\r\n          text: 'Reload',\r\n          closeModal: false\r\n        }\r\n      }\r\n    }).then(() => {\r\n      window.location.reload()\r\n    })\r\n  }\r\n}\r\n\r\npage.checkIfPublic = () => {\r\n  return axios.get('api/check', {\r\n    onDownloadProgress: () => {\r\n      // Only do render and/or newsfeed after this request has been initiated to avoid blocking\r\n      /* global render */\r\n      if (typeof render !== 'undefined' && !render.done) render.do()\r\n      /* global newsfeed */\r\n      if (typeof newsfeed !== 'undefined' && !newsfeed.done) newsfeed.do()\r\n      if (!page.apiChecked) page.apiChecked = true\r\n    }\r\n  }).then(response => {\r\n    if (response.data.version) {\r\n      page.checkClientVersion(response.data.version)\r\n    }\r\n\r\n    page.private = response.data.private\r\n    page.enableUserAccounts = response.data.enableUserAccounts\r\n\r\n    page.maxSize = parseInt(response.data.maxSize)\r\n    page.maxSizeBytes = page.maxSize * 1e6\r\n    page.chunkSizeConfig = {\r\n      max: (response.data.chunkSize && parseInt(response.data.chunkSize.max)) || 95,\r\n      default: response.data.chunkSize && parseInt(response.data.chunkSize.default)\r\n    }\r\n\r\n    page.temporaryUploadAges = response.data.temporaryUploadAges\r\n    page.fileIdentifierLength = response.data.fileIdentifierLength\r\n    page.stripTagsConfig = response.data.stripTags\r\n\r\n    return page.preparePage()\r\n  }).catch(page.onInitError)\r\n}\r\n\r\npage.preparePage = () => {\r\n  if (page.private) {\r\n    if (page.token) {\r\n      return page.verifyToken(page.token, true)\r\n    } else {\r\n      const button = document.querySelector('#loginToUpload')\r\n      button.href = 'auth'\r\n      button.classList.remove('is-loading')\r\n      if (page.enableUserAccounts) {\r\n        button.innerText = 'Anonymous upload is disabled.\\nLog in or register to upload.'\r\n      } else {\r\n        button.innerText = 'Running in private mode.\\nLog in to upload.'\r\n      }\r\n    }\r\n  } else {\r\n    return page.prepareUpload()\r\n  }\r\n}\r\n\r\npage.verifyToken = (token, reloadOnError) => {\r\n  return axios.post('api/tokens/verify', { token }).then(response => {\r\n    if (response.data.success === false) {\r\n      return swal({\r\n        title: 'An error occurred!',\r\n        text: response.data.description,\r\n        icon: 'error'\r\n      }).then(() => {\r\n        if (!reloadOnError) return\r\n        localStorage.removeItem('token')\r\n        window.location.reload()\r\n      })\r\n    }\r\n\r\n    localStorage[lsKeys.token] = token\r\n    page.token = token\r\n    return page.prepareUpload()\r\n  }).catch(page.onInitError)\r\n}\r\n\r\npage.prepareUpload = () => {\r\n  // I think this fits best here because we need to check for a valid token before we can get the albums\r\n  if (page.token) {\r\n    // Change /auth link to /dashboard\r\n    const authLink = document.querySelector('#linksColumn a[href=\"auth\"]')\r\n    if (authLink) authLink.setAttribute('href', 'dashboard')\r\n\r\n    // Display the album selection\r\n    document.querySelector('#albumDiv').classList.remove('is-hidden')\r\n\r\n    page.albumSelect = document.querySelector('#albumSelect')\r\n    page.albumSelectOnChange = () => {\r\n      page.album = parseInt(page.albumSelect.value)\r\n      // Re-generate ShareX config file\r\n      if (typeof page.prepareShareX === 'function') page.prepareShareX()\r\n    }\r\n    page.albumSelect.addEventListener('change', page.albumSelectOnChange)\r\n\r\n    // Fetch albums\r\n    page.fetchAlbums()\r\n  } else if (page.enableUserAccounts) {\r\n    document.querySelector('#loginLinkText').innerHTML = 'Create an account and keep track of your uploads'\r\n  }\r\n\r\n  // Prepare & generate config tab\r\n  page.prepareUploadConfig()\r\n\r\n  // Update elements wherever applicable\r\n  document.querySelector('#maxSize > span').innerHTML = page.getPrettyBytes(page.maxSizeBytes)\r\n  document.querySelector('#loginToUpload').classList.add('is-hidden')\r\n\r\n  // Prepare & generate files upload tab\r\n  page.prepareDropzone()\r\n\r\n  // Generate ShareX config file\r\n  if (typeof page.prepareShareX === 'function') page.prepareShareX()\r\n\r\n  // Prepare urls upload tab\r\n  const urlMaxSize = document.querySelector('#urlMaxSize')\r\n  if (urlMaxSize) {\r\n    page.urlMaxSize = parseInt(urlMaxSize.innerHTML)\r\n    page.urlMaxSizeBytes = page.urlMaxSize * 1e6\r\n    urlMaxSize.innerHTML = page.getPrettyBytes(page.urlMaxSizeBytes)\r\n  }\r\n\r\n  const uploadUrls = document.querySelector('#uploadUrls')\r\n  if (uploadUrls) {\r\n    uploadUrls.addEventListener('click', event => {\r\n      page.addUrlsToQueue()\r\n    })\r\n  }\r\n\r\n  // Get all tabs\r\n  const tabsContainer = document.querySelector('#tabs')\r\n  const tabs = tabsContainer.querySelectorAll('li')\r\n  for (let i = 0; i < tabs.length; i++) {\r\n    const id = tabs[i].dataset.id\r\n    const tabContent = document.querySelector(`#${id}`)\r\n    if (!tabContent) continue\r\n\r\n    tabs[i].addEventListener('click', () => {\r\n      page.setActiveTab(i)\r\n    })\r\n    page.tabs.push({ tab: tabs[i], content: tabContent })\r\n  }\r\n\r\n  // Set first valid tab as the default active tab\r\n  if (page.tabs.length) {\r\n    page.setActiveTab(0)\r\n    tabsContainer.classList.remove('is-hidden')\r\n  }\r\n}\r\n\r\npage.setActiveTab = index => {\r\n  for (let i = 0; i < page.tabs.length; i++) {\r\n    if (i === index) {\r\n      page.tabs[i].tab.classList.add('is-active')\r\n      page.tabs[i].content.classList.remove('is-hidden')\r\n      page.activeTab = index\r\n    } else {\r\n      page.tabs[i].tab.classList.remove('is-active')\r\n      page.tabs[i].content.classList.add('is-hidden')\r\n    }\r\n  }\r\n}\r\n\r\npage.fetchAlbums = () => {\r\n  return axios.get('api/albums', {\r\n    headers: {\r\n      simple: '1',\r\n      token: page.token\r\n    }\r\n  }).then(response => {\r\n    if (response.data.success === false) {\r\n      return swal('An error occurred!', response.data.description, 'error')\r\n    }\r\n\r\n    // Create an option for each album\r\n    if (Array.isArray(response.data.albums) && response.data.albums.length) {\r\n      for (let i = 0; i < response.data.albums.length; i++) {\r\n        const album = response.data.albums[i]\r\n        const option = document.createElement('option')\r\n        option.value = album.id\r\n        option.innerHTML = album.name\r\n        page.albumSelect.appendChild(option)\r\n      }\r\n    }\r\n  }).catch(page.onInitError)\r\n}\r\n\r\npage.prepareDropzone = () => {\r\n  // Parse template element\r\n  const previewNode = document.querySelector('#tpl')\r\n  page.previewTemplate = previewNode.innerHTML\r\n  previewNode.parentNode.removeChild(previewNode)\r\n\r\n  // Generate files upload tab\r\n  const tabDiv = document.querySelector('#tab-files')\r\n  const div = document.createElement('div')\r\n  div.className = 'control is-expanded'\r\n  div.innerHTML = `\r\n    <div id=\"dropzone\" class=\"button is-danger is-outlined is-fullwidth is-unselectable\">\r\n      <span class=\"icon\">\r\n        <i class=\"icon-upload-cloud\"></i>\r\n      </span>\r\n      <span>Click here or drag & drop files</span>\r\n    </div>\r\n  `\r\n  tabDiv.querySelector('.dz-container').appendChild(div)\r\n\r\n  const previewsContainer = tabDiv.querySelector('#tab-files .field.uploads')\r\n\r\n  page.dropzone = new Dropzone(document.body, {\r\n    url: 'api/upload',\r\n    paramName: 'files[]',\r\n    clickable: tabDiv.querySelector('#dropzone'),\r\n    maxFilesize: page.maxSizeBytes / 1024 / 1024, // this option expects MiB\r\n    parallelUploads: page.parallelUploads,\r\n    uploadMultiple: false,\r\n    previewsContainer,\r\n    previewTemplate: page.previewTemplate,\r\n    createImageThumbnails: false,\r\n    autoProcessQueue: true,\r\n    headers: { token: page.token },\r\n    chunking: Boolean(page.chunkSize),\r\n    chunkSize: page.chunkSize * 1e6, // this option expects Bytes\r\n    parallelChunkUploads: false, // for now, enabling this breaks descriptive upload progress\r\n    timeout: 0,\r\n\r\n    init () {\r\n      this.on('addedfile', file => {\r\n        // Set active tab to file uploads, if necessary\r\n        if (page.activeTab !== 0) page.setActiveTab(0)\r\n\r\n        // Add file entry\r\n        tabDiv.querySelector('.uploads').classList.remove('is-hidden')\r\n\r\n        file.previewElement.querySelector('.name').innerHTML = file.name\r\n        file.previewElement.querySelector('.descriptive-progress').innerHTML = 'Waiting in queue\\u2026'\r\n      })\r\n\r\n      this.on('sending', (file, xhr) => {\r\n        // Add timeout listener (hacky method due to lack of built-in timeout handler)\r\n        if (!xhr.ontimeout) {\r\n          xhr.ontimeout = () => {\r\n            const instances = page.dropzone.getUploadingFiles()\r\n              .filter(instance => instance.xhr === xhr)\r\n            page.dropzone._handleUploadError(instances, xhr, 'Connection timed out. Try to reduce upload chunk size.')\r\n          }\r\n        }\r\n\r\n        // Attach necessary data for initial upload speed calculation\r\n        if (typeof xhr._uplSpeedCalc === 'undefined') {\r\n          xhr._uplSpeedCalc = {\r\n            lastSent: 0,\r\n            data: [{ timestamp: Date.now(), bytes: 0 }]\r\n          }\r\n        }\r\n\r\n        // If not chunked uploads, add extra headers\r\n        if (!file.upload.chunked) {\r\n          if (page.album !== null) xhr.setRequestHeader('albumid', page.album)\r\n          if (page.fileLength !== null) xhr.setRequestHeader('filelength', page.fileLength)\r\n          if (page.uploadAge !== null) xhr.setRequestHeader('age', page.uploadAge)\r\n          if (page.stripTags !== null) xhr.setRequestHeader('striptags', page.stripTags)\r\n        }\r\n\r\n        if (!file.upload.chunked) {\r\n          file.previewElement.querySelector('.descriptive-progress').innerHTML = 'Uploading\\u2026'\r\n        } else if (file.upload.chunks.length === 1) {\r\n          file.previewElement.querySelector('.descriptive-progress').innerHTML = `Uploading chunk 1/${file.upload.totalChunkCount}\\u2026`\r\n        }\r\n      })\r\n\r\n      // Update descriptive progress\r\n      this.on('uploadprogress', (file, progress) => {\r\n        // Total bytes will eventually be bigger than file size when chunked\r\n        const total = Math.max(file.size, file.upload.total)\r\n        const percentage = (file.upload.bytesSent / total * 100).toFixed(0)\r\n\r\n        const upl = file.upload.chunked\r\n          ? file.upload.chunks[file.upload.chunks.length - 1]\r\n          : file.upload\r\n        const xhr = upl.xhr || file.xhr\r\n\r\n        let prefix = 'Uploading\\u2026'\r\n        let skipProgress = false\r\n        if (file.upload.chunked) {\r\n          const done = upl.bytesSent === upl.total\r\n          const last = file.upload.chunks.length === file.upload.totalChunkCount\r\n          let chunkIndex = file.upload.chunks.length\r\n          if (done && !last) {\r\n            chunkIndex++\r\n            skipProgress = true\r\n          }\r\n          prefix = `Uploading chunk ${chunkIndex}/${file.upload.totalChunkCount}\\u2026`\r\n        }\r\n\r\n        // Real-time upload speed calculation\r\n        let prettyBytesPerSec\r\n        if (!skipProgress) {\r\n          const now = Date.now()\r\n          const bytesSent = upl.bytesSent - xhr._uplSpeedCalc.lastSent\r\n\r\n          // Push data of current iteration\r\n          xhr._uplSpeedCalc.lastSent = upl.bytesSent\r\n          xhr._uplSpeedCalc.data.push({ timestamp: now, bytes: bytesSent })\r\n\r\n          // Wait till at least the 2nd iteration (3 data including initial data)\r\n          const length = xhr._uplSpeedCalc.data.length\r\n          if (length > 2) {\r\n            // Calculate using data from all iterations\r\n            let elapsed = 0\r\n            let bytesPerSec = 0\r\n            let fullSec = false\r\n            let i = length - 1 // Always start with 2nd from last item\r\n            while (i--) {\r\n              // Splice data of unrequired iterations\r\n              if (fullSec) {\r\n                xhr._uplSpeedCalc.data.splice(i, 1)\r\n                continue\r\n              }\r\n              // Sum data\r\n              elapsed = now - xhr._uplSpeedCalc.data[i].timestamp\r\n              if (elapsed > 1000) {\r\n                const excessDuration = elapsed - 1000\r\n                const newerIterationElapsed = now - xhr._uplSpeedCalc.data[i + 1].timestamp\r\n                const duration = elapsed - newerIterationElapsed\r\n                const fragment = (duration - excessDuration) / duration * xhr._uplSpeedCalc.data[i + 1].bytes\r\n                bytesPerSec += fragment\r\n                fullSec = true\r\n              } else {\r\n                bytesPerSec += xhr._uplSpeedCalc.data[i + 1].bytes\r\n              }\r\n            }\r\n\r\n            // If not enough data\r\n            if (!fullSec) bytesPerSec = 1000 / elapsed * bytesPerSec\r\n\r\n            // Get pretty bytes\r\n            prettyBytesPerSec = page.getPrettyBytes(bytesPerSec)\r\n          }\r\n        }\r\n\r\n        file.previewElement.querySelector('.descriptive-progress').innerHTML =\r\n          `${prefix} ${percentage}%${prettyBytesPerSec ? ` at ${prettyBytesPerSec}/s` : ''}`\r\n      })\r\n\r\n      this.on('success', (file, data) => {\r\n        if (!data) return\r\n        file.previewElement.querySelector('.descriptive-progress').classList.add('is-hidden')\r\n\r\n        if (data.success === false) {\r\n          file.previewElement.querySelector('.error').innerHTML = data.description\r\n          file.previewElement.querySelector('.error').classList.remove('is-hidden')\r\n        }\r\n\r\n        if (Array.isArray(data.files) && data.files[0]) {\r\n          page.updateTemplate(file, data.files[0])\r\n        }\r\n      })\r\n\r\n      this.on('error', (file, error, xhr) => {\r\n        let err = error\r\n        if (typeof error === 'object' && error.description) {\r\n          err = error.description\r\n        } else if (xhr) {\r\n          // Formatting the Object is necessary since the function expect Axios errors\r\n          err = page.onAxiosError({\r\n            response: {\r\n              status: xhr.status,\r\n              statusText: xhr.statusText\r\n            }\r\n          }, true).data.description\r\n        } else if (error instanceof Error) {\r\n          err = error.toString()\r\n        }\r\n\r\n        // Clean up file size errors\r\n        if (/^File is too big/.test(err) || /File too large/.test(err)) {\r\n          err = `File too large (${page.getPrettyBytes(file.size)}).`\r\n        }\r\n\r\n        file.previewElement.querySelector('.descriptive-progress').classList.add('is-hidden')\r\n\r\n        file.previewElement.querySelector('.error').innerHTML = err\r\n        file.previewElement.querySelector('.error').classList.remove('is-hidden')\r\n\r\n        page.updateTemplateIcon(file.previewElement, 'icon-block')\r\n      })\r\n    },\r\n\r\n    chunksUploaded (file, done) {\r\n      file.previewElement.querySelector('.descriptive-progress').innerHTML =\r\n        `Rebuilding ${file.upload.totalChunkCount} chunks\\u2026`\r\n\r\n      return axios.post('api/upload/finishchunks', {\r\n        // This API supports an array of multiple files\r\n        files: [{\r\n          uuid: file.upload.uuid,\r\n          original: file.name,\r\n          type: file.type,\r\n          albumid: page.album,\r\n          filelength: page.fileLength,\r\n          age: page.uploadAge\r\n        }]\r\n      }, {\r\n        headers: {\r\n          token: page.token,\r\n          // Unlike the options above (e.g. albumid, filelength, etc.),\r\n          // strip tags cannot yet be configured per file with this API\r\n          striptags: page.stripTags\r\n        }\r\n      }).catch(error => page.onAxiosError(error, true)).then(response => {\r\n        file.previewElement.querySelector('.descriptive-progress').classList.add('is-hidden')\r\n\r\n        if (response.data.success === false) {\r\n          file.previewElement.querySelector('.error').innerHTML = response.data.description\r\n          file.previewElement.querySelector('.error').classList.remove('is-hidden')\r\n\r\n          page.updateTemplateIcon(file.previewElement, 'icon-block')\r\n        }\r\n\r\n        if (response.data.files && response.data.files[0]) {\r\n          page.updateTemplate(file, response.data.files[0])\r\n        }\r\n\r\n        return done()\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\npage.addUrlsToQueue = () => {\r\n  const urls = document.querySelector('#urls').value\r\n    .split(/\\r?\\n/)\r\n    .filter(url => {\r\n      return url.trim().length\r\n    })\r\n\r\n  if (!urls.length) {\r\n    return swal('An error occurred!', 'You have not entered any URLs.', 'error')\r\n  }\r\n\r\n  const tabDiv = document.querySelector('#tab-urls')\r\n  tabDiv.querySelector('.uploads').classList.remove('is-hidden')\r\n\r\n  for (let i = 0; i < urls.length; i++) {\r\n    const previewTemplate = document.createElement('template')\r\n    previewTemplate.innerHTML = page.previewTemplate.trim()\r\n\r\n    const previewElement = previewTemplate.content.firstChild\r\n    previewElement.querySelector('.name').innerHTML = urls[i]\r\n    previewElement.querySelector('.descriptive-progress').innerHTML = 'Waiting in queue\\u2026'\r\n\r\n    const previewsContainer = tabDiv.querySelector('.uploads')\r\n    previewsContainer.appendChild(previewElement)\r\n\r\n    page.urlsQueue.push({\r\n      url: urls[i],\r\n      previewElement\r\n    })\r\n  }\r\n\r\n  page.processUrlsQueue()\r\n  document.querySelector('#urls').value = ''\r\n}\r\n\r\npage.processUrlsQueue = () => {\r\n  if (!page.urlsQueue.length) return\r\n\r\n  function finishedUrlUpload (file, data) {\r\n    file.previewElement.querySelector('.descriptive-progress').classList.add('is-hidden')\r\n\r\n    if (data.success === false) {\r\n      const match = data.description.match(/ over limit: (\\d+)$/)\r\n      if (match && match[1]) {\r\n        data.description = `File exceeded limit of ${page.getPrettyBytes(match[1])}.`\r\n      }\r\n\r\n      file.previewElement.querySelector('.error').innerHTML = data.description\r\n      file.previewElement.querySelector('.error').classList.remove('is-hidden')\r\n\r\n      page.updateTemplateIcon(file.previewElement, 'icon-block')\r\n    }\r\n\r\n    if (Array.isArray(data.files) && data.files[0]) {\r\n      page.updateTemplate(file, data.files[0])\r\n    }\r\n\r\n    page.activeUrlsQueue--\r\n    return shiftQueue()\r\n  }\r\n\r\n  function initUrlUpload (file) {\r\n    file.previewElement.querySelector('.descriptive-progress').innerHTML =\r\n      'Waiting for server to fetch URL\\u2026'\r\n\r\n    return axios.post('api/upload', {\r\n      urls: [file.url]\r\n    }, {\r\n      headers: {\r\n        token: page.token,\r\n        albumid: page.album,\r\n        age: page.uploadAge,\r\n        filelength: page.fileLength\r\n      }\r\n    }).catch(error => page.onAxiosError(error, true)).then(response => {\r\n      return finishedUrlUpload(file, response.data)\r\n    })\r\n  }\r\n\r\n  function shiftQueue () {\r\n    while (page.urlsQueue.length && (page.activeUrlsQueue < page.parallelUploads)) {\r\n      page.activeUrlsQueue++\r\n      initUrlUpload(page.urlsQueue.shift())\r\n    }\r\n  }\r\n\r\n  return shiftQueue()\r\n}\r\n\r\npage.updateTemplateIcon = (templateElement, iconClass) => {\r\n  const iconElement = templateElement.querySelector('.icon')\r\n  if (!iconElement) return\r\n\r\n  iconElement.classList.add(iconClass)\r\n  iconElement.classList.remove('is-hidden')\r\n}\r\n\r\npage.updateTemplate = (file, response) => {\r\n  if (!response.url) return\r\n\r\n  const link = file.previewElement.querySelector('.link')\r\n  const a = link.querySelector('a')\r\n  const clipboard = file.previewElement.querySelector('.clipboard-mobile > .clipboard-js')\r\n  a.href = a.innerHTML = clipboard.dataset.clipboardText = response.url\r\n\r\n  link.classList.remove('is-hidden')\r\n  clipboard.parentElement.classList.remove('is-hidden')\r\n\r\n  const exec = /.[\\w]+$/.exec(response.url)\r\n  const extname = exec && exec[0]\r\n    ? exec[0].toLowerCase()\r\n    : null\r\n\r\n  if (page.imageExts.includes(extname)) {\r\n    if (page.previewImages) {\r\n      const img = file.previewElement.querySelector('img')\r\n      img.setAttribute('alt', response.name || '')\r\n      img.dataset.src = response.url\r\n      img.classList.remove('is-hidden')\r\n      img.onerror = event => {\r\n        // Hide image elements that fail to load\r\n        // Consequently include WEBP in browsers that do not have WEBP support (e.g. IE)\r\n        event.currentTarget.classList.add('is-hidden')\r\n        page.updateTemplateIcon(file.previewElement, 'icon-picture')\r\n      }\r\n      page.lazyLoad.update(file.previewElement.querySelectorAll('img'))\r\n    } else {\r\n      page.updateTemplateIcon(file.previewElement, 'icon-picture')\r\n    }\r\n  } else if (page.videoExts.includes(extname)) {\r\n    page.updateTemplateIcon(file.previewElement, 'icon-video')\r\n  } else {\r\n    page.updateTemplateIcon(file.previewElement, 'icon-doc-inv')\r\n  }\r\n\r\n  if (response.expirydate) {\r\n    const expiryDate = file.previewElement.querySelector('.expiry-date')\r\n    expiryDate.innerHTML = `EXP: ${page.getPrettyDate(new Date(response.expirydate * 1000))}`\r\n    expiryDate.classList.remove('is-hidden')\r\n  }\r\n}\r\n\r\npage.createAlbum = () => {\r\n  const div = document.createElement('div')\r\n  div.innerHTML = `\r\n    <div class=\"field\">\r\n      <div class=\"controls\">\r\n        <input id=\"swalName\" class=\"input\" type=\"text\" placeholder=\"Name\" maxlength=\"${page.albumTitleMaxLength}\">\r\n      </div>\r\n      <p class=\"help\">Max length is ${page.albumTitleMaxLength} characters.</p>\r\n    </div>\r\n    <div class=\"field\">\r\n      <div class=\"control\">\r\n        <textarea id=\"swalDescription\" class=\"textarea\" placeholder=\"Description\" rows=\"2\" maxlength=\"${page.albumDescMaxLength}\"></textarea>\r\n      </div>\r\n      <p class=\"help\">Max length is ${page.albumDescMaxLength} characters.</p>\r\n    </div>\r\n    <div class=\"field\">\r\n      <div class=\"control\">\r\n        <label class=\"checkbox\">\r\n          <input id=\"swalDownload\" type=\"checkbox\" checked>\r\n          Enable download\r\n        </label>\r\n      </div>\r\n    </div>\r\n    <div class=\"field\">\r\n      <div class=\"control\">\r\n        <label class=\"checkbox\">\r\n          <input id=\"swalPublic\" type=\"checkbox\" checked>\r\n          Enable public link\r\n        </label>\r\n      </div>\r\n    </div>\r\n  `\r\n\r\n  swal({\r\n    title: 'Create new album',\r\n    icon: 'info',\r\n    content: div,\r\n    buttons: {\r\n      cancel: true,\r\n      confirm: {\r\n        closeModal: false\r\n      }\r\n    }\r\n  }).then(value => {\r\n    if (!value) return\r\n\r\n    const name = document.querySelector('#swalName').value.trim()\r\n    axios.post('api/albums', {\r\n      name,\r\n      description: document.querySelector('#swalDescription').value.trim(),\r\n      download: document.querySelector('#swalDownload').checked,\r\n      public: document.querySelector('#swalPublic').checked\r\n    }, {\r\n      headers: {\r\n        token: page.token\r\n      }\r\n    }).then(response => {\r\n      if (response.data.success === false) {\r\n        return swal('An error occurred!', response.data.description, 'error')\r\n      }\r\n\r\n      const option = document.createElement('option')\r\n      page.albumSelect.appendChild(option)\r\n      option.value = response.data.id\r\n      option.innerHTML = name\r\n      option.selected = true\r\n      page.albumSelectOnChange()\r\n\r\n      swal('Woohoo!', 'Album was created successfully.', 'success')\r\n    }).catch(page.onError)\r\n  })\r\n}\r\n\r\npage.prepareUploadConfig = () => {\r\n  // This object should only be used to set fallback values for page[key]\r\n  // (essentially for page[key] properties that explicitly need to be set as something)\r\n  // As for default values in the Config tab (which will not set page[key]),\r\n  // check out number.default property of each config\r\n  const fallback = {\r\n    chunkSize: page.chunkSizeConfig.default,\r\n    parallelUploads: 2\r\n  }\r\n\r\n  const temporaryUploadAges = Array.isArray(page.temporaryUploadAges) &&\r\n    page.temporaryUploadAges.length\r\n  const fileIdentifierLength = page.fileIdentifierLength &&\r\n    typeof page.fileIdentifierLength.min === 'number' &&\r\n    typeof page.fileIdentifierLength.max === 'number'\r\n\r\n  const config = {\r\n    siBytes: {\r\n      label: 'File size display',\r\n      select: [\r\n        { value: 'default', text: '1000 B = 1 kB = 1 Kilobyte' },\r\n        { value: '0', text: '1024 B = 1 KiB = 1 Kibibyte' }\r\n      ],\r\n      help: 'This will be used in our homepage, dashboard, and album public pages.',\r\n      valueHandler () {} // Do nothing\r\n    },\r\n    fileLength: {\r\n      display: fileIdentifierLength,\r\n      label: 'File identifier length',\r\n      number: fileIdentifierLength\r\n        ? {\r\n            min: page.fileIdentifierLength.min,\r\n            max: page.fileIdentifierLength.max,\r\n            default: page.fileIdentifierLength.default,\r\n            round: true\r\n          }\r\n        : undefined,\r\n      help: true, // true means auto-generated, for number-based configs only\r\n      disabled: fileIdentifierLength && page.fileIdentifierLength.force\r\n    },\r\n    uploadAge: {\r\n      display: temporaryUploadAges,\r\n      label: 'Upload age',\r\n      select: [],\r\n      help: 'Whether to automatically delete your uploads after a certain amount of time.'\r\n    },\r\n    stripTags: {\r\n      display: page.stripTagsConfig,\r\n      label: 'Strip tags',\r\n      select: page.stripTagsConfig\r\n        ? [\r\n            { value: page.stripTagsConfig.default ? 'default' : '1', text: 'Yes' },\r\n            { value: page.stripTagsConfig.default ? '0' : 'default', text: 'No' }\r\n          ]\r\n        : null,\r\n      help: `Whether to strip tags (e.g. EXIF) from your uploads.<br>\r\n        This only applies to regular image${page.stripTagsConfig && page.stripTagsConfig.video ? ' and video' : ''} uploads (i.e. not URL uploads).`,\r\n      disabled: page.stripTagsConfig && page.stripTagsConfig.force\r\n    },\r\n    chunkSize: {\r\n      display: Boolean(page.chunkSizeConfig.default),\r\n      label: 'Upload chunk size (MB)',\r\n      number: {\r\n        min: 1,\r\n        max: page.chunkSizeConfig.max,\r\n        default: fallback.chunkSize,\r\n        suffix: ' MB',\r\n        round: true\r\n      },\r\n      help: true\r\n    },\r\n    parallelUploads: {\r\n      label: 'Parallel uploads',\r\n      number: {\r\n        min: 1,\r\n        max: 10,\r\n        default: fallback.parallelUploads,\r\n        round: true\r\n      },\r\n      help: true\r\n    },\r\n    uploadsHistoryOrder: {\r\n      label: 'Uploads history order',\r\n      select: [\r\n        { value: 'default', text: 'Older files on top' },\r\n        { value: '0', text: 'Newer files on top' }\r\n      ],\r\n      help: `\"Newer files on top\" will use a CSS technique, which unfortunately come with <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction#Accessibility_concerns\" target=\"_blank\" rel=\"noopener\">some undesirable side effects</a>.<br>\r\n        This also affects text selection, such as when trying to select text from top to bottom will result in them being selected from bottom to top instead, and vice versa.`,\r\n      valueHandler (value) {\r\n        if (value === '0') {\r\n          const uploadFields = document.querySelectorAll('.tab-content > .uploads')\r\n          for (let i = 0; i < uploadFields.length; i++) {\r\n            uploadFields[i].classList.add('is-reversed')\r\n          }\r\n        }\r\n      }\r\n    },\r\n    previewImages: {\r\n      label: 'Load images for preview',\r\n      select: [\r\n        { value: 'default', text: 'Yes' },\r\n        { value: '0', text: 'No' }\r\n      ],\r\n      help: 'By default, uploaded images will be loaded as their previews.',\r\n      valueHandler (value) {\r\n        page.previewImages = value !== '0'\r\n      }\r\n    }\r\n  }\r\n\r\n  if (temporaryUploadAges) {\r\n    const stored = parseFloat(localStorage[lsKeys.uploadAge])\r\n    for (let i = 0; i < page.temporaryUploadAges.length; i++) {\r\n      const age = page.temporaryUploadAges[i]\r\n      config.uploadAge.select.push({\r\n        value: i === 0 ? 'default' : String(age),\r\n        text: page.getPrettyUploadAge(age)\r\n      })\r\n      if (age === stored) {\r\n        config.uploadAge.value = stored\r\n      }\r\n    }\r\n  }\r\n\r\n  if (fileIdentifierLength) {\r\n    const stored = parseInt(localStorage[lsKeys.fileLength])\r\n    if (!page.fileIdentifierLength.force &&\r\n      !isNaN(stored) &&\r\n      stored >= page.fileIdentifierLength.min &&\r\n      stored <= page.fileIdentifierLength.max) {\r\n      config.fileLength.value = stored\r\n    }\r\n  }\r\n\r\n  const tabContent = document.querySelector('#tab-config')\r\n  const form = document.createElement('form')\r\n  form.addEventListener('submit', event => event.preventDefault())\r\n\r\n  const configKeys = Object.keys(config)\r\n  for (let i = 0; i < configKeys.length; i++) {\r\n    const key = configKeys[i]\r\n    const conf = config[key]\r\n\r\n    // Skip only if display attribute is explicitly set to false\r\n    if (conf.display === false) continue\r\n\r\n    const field = document.createElement('div')\r\n    field.className = 'field'\r\n\r\n    let value\r\n    if (!conf.disabled) {\r\n      if (typeof conf.value !== 'undefined') {\r\n        value = conf.value\r\n      } else if (typeof conf.number !== 'undefined') {\r\n        const parsed = parseInt(localStorage[lsKeys[key]])\r\n        if (!isNaN(parsed) && parsed <= conf.number.max && parsed >= conf.number.min) {\r\n          value = parsed\r\n        }\r\n      } else {\r\n        const stored = localStorage[lsKeys[key]]\r\n        if (Array.isArray(conf.select)) {\r\n          value = conf.select.find(sel => sel.value === stored)\r\n            ? stored\r\n            : undefined\r\n        } else {\r\n          value = stored\r\n        }\r\n      }\r\n\r\n      // If valueHandler function exists, defer to the function,\r\n      // otherwise pass value to global page object\r\n      if (typeof conf.valueHandler === 'function') {\r\n        conf.valueHandler(value)\r\n      } else if (typeof value !== 'undefined') {\r\n        page[key] = value\r\n      } else if (typeof fallback[key] !== 'undefined') {\r\n        page[key] = fallback[key]\r\n      }\r\n    }\r\n\r\n    let control\r\n    if (Array.isArray(conf.select)) {\r\n      control = document.createElement('div')\r\n      control.className = 'select is-fullwidth'\r\n\r\n      const opts = []\r\n      for (let j = 0; j < conf.select.length; j++) {\r\n        const opt = conf.select[j]\r\n        const selected = (value && (opt.value === String(value))) ||\r\n          (typeof value === 'undefined' && opt.value === 'default')\r\n        opts.push(`\r\n          <option value=\"${opt.value}\"${selected ? ' selected' : ''}>\r\n            ${opt.text}${opt.value === 'default' ? ' (default)' : ''}\r\n          </option>\r\n        `)\r\n      }\r\n\r\n      control.innerHTML = `\r\n        <select id=\"${key}\">\r\n          ${opts.join('\\n')}\r\n        </select>\r\n      `\r\n    } else if (conf.number) {\r\n      control = document.createElement('input')\r\n      control.id = control.name = key\r\n      control.className = 'input is-fullwidth'\r\n      control.type = 'number'\r\n\r\n      if (typeof conf.number.min !== 'undefined') control.min = conf.number.min\r\n      if (typeof conf.number.max !== 'undefined') control.max = conf.number.max\r\n      if (typeof value === 'number') control.value = value\r\n      else if (typeof conf.number.default !== 'undefined') control.value = conf.number.default\r\n    }\r\n\r\n    let help\r\n    if (conf.disabled) {\r\n      if (Array.isArray(conf.select)) {\r\n        control.querySelector('select').disabled = conf.disabled\r\n      } else {\r\n        control.disabled = conf.disabled\r\n      }\r\n      help = 'This option is currently not configurable.'\r\n    } else if (typeof conf.help === 'string') {\r\n      help = conf.help\r\n    } else if (conf.help === true && typeof conf.number !== 'undefined') {\r\n      const tmp = []\r\n\r\n      if (typeof conf.number.default !== 'undefined') {\r\n        tmp.push(`Default is ${conf.number.default}${conf.number.suffix || ''}.`)\r\n      }\r\n      if (typeof conf.number.min !== 'undefined') {\r\n        tmp.push(`Min is ${conf.number.min}${conf.number.suffix || ''}.`)\r\n      }\r\n      if (typeof conf.number.max !== 'undefined') {\r\n        tmp.push(`Max is ${conf.number.max}${conf.number.suffix || ''}.`)\r\n      }\r\n\r\n      help = tmp.join(' ')\r\n    }\r\n\r\n    field.innerHTML = `\r\n      <label class=\"label\">${conf.label}</label>\r\n      <div class=\"control\"></div>\r\n      ${help ? `<p class=\"help\">${help}</p>` : ''}\r\n    `\r\n    field.querySelector('div.control').appendChild(control)\r\n\r\n    form.appendChild(field)\r\n  }\r\n\r\n  const submit = document.createElement('div')\r\n  submit.className = 'field'\r\n  submit.innerHTML = `\r\n    <p class=\"control\">\r\n      <button id=\"saveConfig\" type=\"submit\" class=\"button is-danger is-outlined is-fullwidth\">\r\n        <span class=\"icon\">\r\n          <i class=\"icon-floppy\"></i>\r\n        </span>\r\n        <span>Save & reload</span>\r\n      </button>\r\n    </p>\r\n    <p class=\"help\">\r\n      This configuration will only be used in this browser.<br>\r\n      After reloading the page, some of them will also be applied to the ShareX config that you can download by clicking on the ShareX icon below.\r\n    </p>\r\n  `\r\n\r\n  form.appendChild(submit)\r\n  form.querySelector('#saveConfig').addEventListener('click', () => {\r\n    if (!form.checkValidity()) return\r\n\r\n    const keys = Object.keys(config)\r\n      .filter(key => config[key].display !== false && config[key].disabled !== true)\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i]\r\n\r\n      let value\r\n      if (typeof config[key].select !== 'undefined') {\r\n        if (form.elements[key].value !== 'default') {\r\n          value = form.elements[key].value\r\n        }\r\n      } else if (typeof config[key].number !== 'undefined') {\r\n        const parsed = parseInt(form.elements[key].value)\r\n        if (!isNaN(parsed) && parsed !== config[key].number.default) {\r\n          value = Math.min(Math.max(parsed, config[key].number.min), config[key].number.max)\r\n        }\r\n      }\r\n\r\n      if (typeof value !== 'undefined') localStorage[lsKeys[key]] = value\r\n      else localStorage.removeItem(lsKeys[key])\r\n    }\r\n\r\n    swal({\r\n      title: 'Woohoo!',\r\n      text: 'Configuration saved into this browser.',\r\n      icon: 'success'\r\n    }).then(() => {\r\n      window.location.reload()\r\n    })\r\n  })\r\n\r\n  tabContent.appendChild(form)\r\n}\r\n\r\npage.getPrettyUploadAge = hours => {\r\n  if (hours === 0) {\r\n    return 'Permanent'\r\n  } else if (hours < 1) {\r\n    const minutes = hours * 60\r\n    return `${minutes} minute${minutes === 1 ? '' : 's'}`\r\n  } else if (hours >= 24) {\r\n    const days = hours / 24\r\n    return `${days} day${days === 1 ? '' : 's'}`\r\n  } else {\r\n    return `${hours} hour${hours === 1 ? '' : 's'}`\r\n  }\r\n}\r\n\r\n// Handle image paste event\r\nwindow.addEventListener('paste', event => {\r\n  const items = (event.clipboardData || event.originalEvent.clipboardData).items\r\n  const index = Object.keys(items)\r\n  for (let i = 0; i < index.length; i++) {\r\n    const item = items[index[i]]\r\n    if (item.kind === 'file') {\r\n      const blob = item.getAsFile()\r\n      /* eslint-disable-next-line compat/compat */\r\n      const file = new File([blob], `pasted-image.${blob.type.match(/(?:[^/]*\\/)([^;]*)/)[1]}`, {\r\n        type: blob.type\r\n      })\r\n      page.dropzone.addFile(file)\r\n    }\r\n  }\r\n})\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n  if (window.cookieconsent) {\r\n    window.cookieconsent.initialise({\r\n      cookie: {\r\n        name: 'cookieconsent_status',\r\n        path: window.location.pathname,\r\n        expiryDays: 730,\r\n        secure: window.location.protocol === 'https:'\r\n      },\r\n      palette: {\r\n        popup: {\r\n          background: '#282828',\r\n          text: '#eff0f1'\r\n        },\r\n        button: {\r\n          background: '#209cee',\r\n          text: '#ffffff'\r\n        }\r\n      },\r\n      theme: 'classic',\r\n      position: 'bottom-left',\r\n      content: {\r\n        message: 'We use cookies to offer you a better browsing experience and to analyze our traffic. You consent to our cookies if you continue to use this website.',\r\n        dismiss: 'Got it!',\r\n        link: 'Details in our Cookie Policy',\r\n        href: 'cookiepolicy'\r\n      }\r\n    })\r\n  }\r\n\r\n  page.checkIfPublic()\r\n\r\n  page.clipboardJS = new ClipboardJS('.clipboard-js')\r\n\r\n  page.clipboardJS.on('success', () => {\r\n    return swal('', 'The link has been copied to clipboard.', 'success', {\r\n      buttons: false,\r\n      timer: 1500\r\n    })\r\n  })\r\n\r\n  page.clipboardJS.on('error', page.onError)\r\n\r\n  page.lazyLoad = new LazyLoad({\r\n    elements_selector: '.field.uploads img'\r\n  })\r\n\r\n  document.querySelector('#createAlbum').addEventListener('click', () => {\r\n    page.createAlbum()\r\n  })\r\n})\r\n"]}